使用方法：将client.py中的 'from AI.naive import naive_ai' 修改为 'from AI.v1.0 import v1_ai', 并将89行的'decision = naive_ai(mypos, state)'
	修改为 'decision = v1_ai(mypos, state)'

策略介绍：
评估值sum：给牌面赋一个weight：
牌面等级：高牌 1	一对 2	两对 3	三条 4	顺子 5	同花 6	葫芦 7	四条 8	同花顺 9	皇家同花顺：10
牌面权值：1	2	4	8	15	32	64	128	256	512

对每种状态，在现有手牌和公共牌的基础上，进行1000次模拟发牌，补至7张，计算此时的牌面weight。sum为所有weight的除以1000

决策：
按照手中牌和公共牌总数分类， 分为2，5，6，7张牌四种情况
7张：
    直接根据牌面level判断
    level 7+，allin
    level 在4-6， 跟注，若跟注后低于500，加注到500
    level = 3 若跟注后超过600，放弃。否则跟注。若跟注后低于300，加注到300
    level = 2，双A双K 若跟注后超过300，放弃。否则跟注
    level = 2，不超过双Q 若跟注后超过200，放弃。否则跟注
    level = 1，直接放弃

6张：
    根据评估值sum判断
    2-    直接放弃
    2~8   若跟注后超过300，放弃。否则跟注
    8~20  跟注。若跟注后低于300，加注到300
    20~40 跟注。若跟注后低于600，加注到600
    40+   allin

5张：
    根据评估值sum判断
    4-    直接放弃
    4~10  若跟注后超过300，放弃。否则跟注
    10~20 跟注。若跟注后低于300，加注到300
    20~50 跟注。若跟注后低于600，加注到600
    50+   allin

2张：
    直接根据牌面判断
    非对子，最大不超过9：若跟注后超过50，放弃。否则跟注
    非对子，最大为10-Q：若跟注后超过100，放弃。否则跟注
    非对子，最大为K-A： 若跟注后超过200，放弃。否则跟注
    对子，不超过9：跟注。若跟注后低于200，加注到200
    双A、双K：跟注。若跟注后低于300，加注到300


测试结果：与naive相比，多次游戏时分数有一定提高，但有时会在压入赌注已经较大时选择弃牌，造成损失。
